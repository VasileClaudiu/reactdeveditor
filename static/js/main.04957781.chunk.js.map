{"version":3,"sources":["logo.svg","files.js","App.js","reportWebVitals.js","index.js"],"names":["files","name","language","value","App","useState","fileName","setFileName","file","disabled","onClick","height","theme","path","defaultLanguage","defaultValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAAe,I,YC4NAA,EAlBD,CACZ,YAAa,CACXC,KAAM,YACNC,SAAU,aACVC,MA9MmB,qmBAgNrB,YAAa,CACXF,KAAM,YACNC,SAAU,MACVC,MA7LoB,usDA+LtB,aAAc,CACZF,KAAM,aACNC,SAAU,OACVC,MArHqB,ojH,OCxDVC,MApCf,WACE,MAAgCC,mBAAS,aAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAOR,EAAMM,GAEnB,OACE,qCACE,wBACEG,SAAuB,cAAbH,EACVI,QAAS,kBAAMH,EAAY,cAF7B,uBAMA,wBACEE,SAAuB,cAAbH,EACVI,QAAS,kBAAMH,EAAY,cAF7B,uBAMA,wBACEE,SAAuB,eAAbH,EACVI,QAAS,kBAAMH,EAAY,eAF7B,wBAMA,cAAC,IAAD,CACEI,OAAO,OACPC,MAAM,UACNC,KAAML,EAAKP,KACXa,gBAAiBN,EAAKN,SACtBa,aAAcP,EAAKL,YCzBZa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.04957781.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const someJSCodeExample = `\r\n  // The source (has been changed) is https://github.com/facebook/react/issues/5465#issuecomment-157888325\r\n\r\n  const CANCELATION_MESSAGE = {\r\n    type: 'cancelation',\r\n    msg: 'operation is manually canceled',\r\n  };\r\n\r\n  function makeCancelable(promise) {\r\n    let hasCanceled_ = false;\r\n\r\n    const wrappedPromise = new Promise((resolve, reject) => {\r\n      promise.then(val => hasCanceled_ ? reject(CANCELATION_MESSAGE) : resolve(val));\r\n      promise.catch(reject);\r\n    });\r\n\r\n    return (wrappedPromise.cancel = () => (hasCanceled_ = true), wrappedPromise);\r\n  }\r\n\r\n  export default makeCancelable;\r\n`;\r\n\r\nconst someCSSCodeExample = `\r\n  @import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');\r\n\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    outline: none;\r\n    -ms-overflow-style: none;\r\n    scrollbar-width: none;\r\n  }\r\n  *::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n\r\n  body {\r\n    margin: 0;\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n      sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n\r\n  [type=reset], [type=submit], button, html [type=button] {\r\n      -webkit-appearance: button;\r\n  }\r\n\r\n  [type=button]{\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  .full-width {\r\n    width: 100%;\r\n  }\r\n  .full-height {\r\n    height: 100%;\r\n  }\r\n  .full-size {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  .ql-editor a {\r\n    color: rgba(255, 255, 255, 0.20);\r\n    cursor: pointer;\r\n    padding-left: 8px;\r\n    padding-right: 8px;\r\n    text-decoration: none;\r\n  }\r\n  .ql-editor ul, .ql-editor li, .ql-editor ol {\r\n    margin-left: 16px;\r\n  }\r\n  .ql-editor object {\r\n    color: #d32f2f;\r\n  }\r\n  .ql-editor blockquote {\r\n    border-left: 3px solid rgba(255, 255, 255, 0.12);\r\n    padding-top: 8px;\r\n    padding-left: 24px;\r\n    padding-right: 16px;\r\n    padding-bottom: 8px;\r\n  }\r\n  .ql-editor .ql-align-center {\r\n    text-align: center;\r\n  }\r\n  .ql-editor .ql-align-justify {\r\n    text-align: justify;\r\n  }\r\n  .ql-editor .ql-align-right {\r\n    text-align: right;\r\n  }\r\n  .ql-editor a:hover {\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nconst someHTMLCodeExample = `\r\n  <!DOCTYPE html>\r\n  <html lang=\"en\">\r\n    <head>\r\n      <meta charset=\"utf-8\" />\r\n      <link rel=\"icon\" href=\"%PUBLIC_URL%/favicon.ico\" />\r\n      <!-- https://web.dev/uses-rel-preconnect -->\r\n      <link rel=\"preconnect\" href=\"https://storage.googleapis.com\">\r\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n      <meta name=\"theme-color\" content=\"#111\" />\r\n\r\n      <meta\r\n        name=\"description\"\r\n        content=\"Wlist\"\r\n        data-react-helmet=\"true\"\r\n      />\r\n      <meta\r\n        property=\"og:title\"\r\n        content=\"Wlist\"\r\n        data-react-helmet=\"true\"\r\n      >\r\n      <meta\r\n        property=\"og:description\"\r\n        content=\"Wlist\"\r\n        data-react-helmet=\"true\"\r\n      >\r\n      <meta\r\n        property=\"og:url\"\r\n        content=\"%PUBLIC_URL%\"\r\n        data-react-helmet=\"true\"\r\n      >\r\n      <meta\r\n        property=\"og:image\"\r\n        content=\"%PUBLIC_URL%/images/cover.png\"\r\n        data-react-helmet=\"true\"\r\n      />\r\n      <meta\r\n        name=\"twitter:card\"\r\n        content=\"summary\"\r\n        data-react-helmet=\"true\"\r\n      />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <link rel=\"apple-touch-icon\" href=\"%PUBLIC_URL%/logo192.png\" />\r\n      <!--\r\n        manifest.json provides metadata used when your web app is installed on a\r\n        user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/\r\n      -->\r\n      <link rel=\"manifest\" href=\"%PUBLIC_URL%/manifest.json\" crossorigin=\"use-credentials\" />\r\n      <!-- https://web.dev/defer-non-critical-css/ -->\r\n      <link rel=\"preload\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" as=\"style\" onload=\"this.onload=null;this.rel='stylesheet'\">\r\n\r\n      <title>Wlist</title>\r\n\r\n      <!-- ie -->\r\n      <script type=\"text/javascript\">\r\n        var ua = navigator.userAgent;\r\n        var is_ie = ua.indexOf('MSIE ') > -1 || ua.indexOf('Trident/') > -1;\r\n\r\n        if (is_ie) {\r\n          document.ie = 'true';\r\n\r\n          var ie_script = document.createElement('script');\r\n          var ie_styles = document.createElement('link');\r\n\r\n          ie_script.src = 'no-ie/init.js';\r\n          ie_styles.rel = 'stylesheet';\r\n          ie_styles.href = 'no-ie/styles.css';\r\n\r\n          function injectScripts() {\r\n            document.body.innerHTML = '';\r\n            document.body.appendChild(ie_styles);\r\n            document.body.appendChild(ie_script);\r\n          }\r\n\r\n          if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', injectScripts);\r\n          } else { // before IE 9\r\n            document.attachEvent('DOMContentLoaded', injectScripts);\r\n          }\r\n\r\n        }\r\n      </script>\r\n    </head>\r\n    <body>\r\n      <noscript>You need to enable JavaScript to run this app.</noscript>\r\n      <script type=\"text/javascript\">\r\n        // set the body color before app initialization, to avoid blinking\r\n        var themeMode = localStorage.getItem('theme-mode');\r\n        var initialBodyStyles = document.createElement('style');\r\n        var currentThemeColor = themeMode === 'light' ? '#fafafa': '#111';\r\n        initialBodyStyles.innerText = 'body { background-color: ' + currentThemeColor + ' }';\r\n        document.head.appendChild(initialBodyStyles);\r\n\r\n        // also set meta[name=\"theme-color\"] content\r\n        var metaTheme = document.querySelector('meta[name=\"theme-color\"]');\r\n\r\n        metaTheme.content = currentThemeColor;\r\n      </script>\r\n      <div id=\"root\"></div>\r\n    </body>\r\n  </html>\r\n`;\r\n\r\nconst files = {\r\n  \"script.js\": {\r\n    name: \"script.js\",\r\n    language: \"javascript\",\r\n    value: someJSCodeExample\r\n  },\r\n  \"style.css\": {\r\n    name: \"style.css\",\r\n    language: \"css\",\r\n    value: someCSSCodeExample\r\n  },\r\n  \"index.html\": {\r\n    name: \"index.html\",\r\n    language: \"html\",\r\n    value: someHTMLCodeExample\r\n  }\r\n};\r\n\r\nexport default files;\r\n","import logo from './logo.svg';\nimport './App.css';\n\nimport React, { useState } from \"react\";\nimport Editor from \"@monaco-editor/react\";\nimport files from \"./files\";\n\nfunction App() {\n  const [fileName, setFileName] = useState(\"script.js\");\n\n  const file = files[fileName];\n\n  return (\n    <>\n      <button\n        disabled={fileName === \"script.js\"}\n        onClick={() => setFileName(\"script.js\")}\n      >\n        script.js\n      </button>\n      <button\n        disabled={fileName === \"style.css\"}\n        onClick={() => setFileName(\"style.css\")}\n      >\n        style.css\n      </button>\n      <button\n        disabled={fileName === \"index.html\"}\n        onClick={() => setFileName(\"index.html\")}\n      >\n        index.html\n      </button>\n      <Editor\n        height=\"95vh\"\n        theme=\"vs-dark\"\n        path={file.name}\n        defaultLanguage={file.language}\n        defaultValue={file.value}\n      />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}